# -*- coding: utf-8 -*-
"""Medical insurance Premium prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xrSQa8Me4jgeZqGk8WRqr-GfF1ZdD06y

# Data preprocessing

Dataset : https://www.kaggle.com/datasets/mirichoi0218/insurance

## Importing the libraries and dataset
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

dataset = pd.read_csv('/content/insurance.csv')

"""## Data Exploration"""

dataset.head()

dataset.shape

dataset.info()

dataset.select_dtypes(include = 'object').columns

len(dataset.select_dtypes(include = 'object').columns)

dataset.select_dtypes(include = ['int64','float64']).columns

len(dataset.select_dtypes(include = ['int64','float64']).columns)

# Statistical summary

dataset.describe()

"""Group the dataset by 'sex', 'smoker', 'region'"""

dataset.groupby('sex').mean()

dataset.groupby('smoker').mean()

dataset.groupby('region').mean()

"""## Dealing with missing values"""

dataset.isnull().values.any()

dataset.isnull().values.sum()

"""## Encoding the categorical data"""

dataset.select_dtypes(include = 'object').columns

dataset['sex'].unique()

dataset['smoker'].unique()

dataset['region'].unique()

dataset.head()

# One hot encoding
dataset = pd.get_dummies(data = dataset, drop_first = True)

dataset.head()

dataset.shape

"""## Correlation matrix"""

dataset_2 = dataset.drop(columns = 'charges')

dataset_2.corrwith(dataset['charges']).plot.bar(
    figsize = (16,9),title = 'Correlation with charges', rot = 45, grid = True
)

corr = dataset.corr()

#heatmap
plt.figure(figsize =(16,9))
sns.heatmap(corr,annot = True)

"""## Splitting the dataset"""

dataset.head()

# matrix of features/ independent variable
x= dataset.drop(columns = 'charges')

# target/ dependent variable
y = dataset['charges']

from sklearn.model_selection import train_test_split

x_train, x_test ,y_train, y_test = train_test_split(x,y,test_size = 0.2, random_state = 0)

x_train.shape

x_test.shape

y_train.shape

y_test.shape

"""## Feature scaling"""

from sklearn.preprocessing import StandardScaler

sc = StandardScaler()
x_train = sc.fit_transform(x_train)
x_test = sc.transform(x_test)

x_train

x_test

"""# Building the Model

## Multiple linear regression
"""

from sklearn.linear_model import LinearRegression
regression_lr = LinearRegression()
regression_lr.fit(x_train,y_train)

y_pred = regression_lr.predict(x_test)

from sklearn.metrics import r2_score

r2_score(y_test,y_pred)

"""## Random Forest regression"""

from sklearn.ensemble import RandomForestRegressor
regression_rf = RandomForestRegressor()
regression_rf.fit(x_train , y_train)

y_pred = regression_rf.predict(x_test)

from sklearn.metrics import r2_score

r2_score(y_test,y_pred)

"""## XGBoost Regression"""

from xgboost import XGBRFRegressor
regression_xgb = XGBRFRegressor()
regression_xgb.fit(x_train,y_train)

y_pred = regression_xgb.predict(x_test)

from sklearn.metrics import r2_score

r2_score(y_test,y_pred)

"""# Predicting singleobservation

## Example 1

Name : Ram, age:40, bmi:45.50, children : 4, smoker: 1, region:northeast
"""

dataset.head()

ram_obs =[[40,45.5,4,1,1,0,0,0]]

regression_xgb.predict(sc.transform(ram_obs))

"""predicted medical premium charge is 43421.676 dollar

## Example 2

Name : Sita, age:19,bmi:27.9, chidren :0, smoker:no, sex: female, region: northwest
"""

dataset.head()

sita_obs = [[19,27.9,0,0,0,1,0,0]]

regression_xgb.predict(sc.transform(sita_obs))

"""predicted medical premium charge is 2374.3804 dollar"""